# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  ASC_PACKAGE_PATH: ${{ github.workspace }}
  AZURE_SUBSCRIPTION: 300f35f7-1c6d-4a2d-ab1d-e9e50bbaa671

jobs:
  build:
    name: Build and Test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 19
        id: steup-java-env
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven

      - name: Build and run tests
        run: mvn test clean
  
  dockerize:
    name: Dockerize
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
    - uses: azure/docker-login@v1
      with:
        login-server: contoso.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: |
        docker build -t myconreg2134.azurecr.io/aa .
        docker push myconreg2134.azurecr.io/aa

  deploy-dev:
    name: Deploy to Dev
    needs: [ dockerize ]
    runs-on: ubuntu-latest
    environment:
      name: Development
    steps:
      - name: Checkout Github Action
        uses: actions/checkout@v2
        
      - name: Set up JDK 19
        id: steup-java-env
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven
          
      - name: maven build, clean
        run: |
          mvn clean package
      
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: deploy to production with artifact
        uses: azure/spring-apps-deploy@v1
        with:
          azure-subscription: ${{ env.AZURE_SUBSCRIPTION }}
          action: Deploy
          service-name: spring-apps-2134
          app-name: demo-api
          use-staging-deployment: false
          package: ${{ env.ASC_PACKAGE_PATH }}/**/*.jar

  deploy-test:
    name: Deploy to Test
    if: github.event.ref == 'refs/heads/main'
    needs: [ dockerize ]
    runs-on: ubuntu-latest
    environment:
      name: Test
    steps:
      - name: Deploy
        run: echo test deploy

  deploy-prod:
    name: Deploy to Production
    needs: [ deploy-test ]
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
      - name: Deploy
        run: echo prod deploy
